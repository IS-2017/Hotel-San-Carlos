<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_buscbien.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEA3ADcAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABmAF8DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9UGkC+v5Gm+co7N+Ck0Q8x8+p/nUhoAZ5y+j/APfDf4Uecvo/
        /fDf4U7mo2mCOqnO5ugAP+R/+r1oAU3CgZIbHc7T/hUM0gk4HmA9B8rYz6/5NfNH7XH7efgT9lmFdPnM
        niXxtPHutvDunyAOufutcPyIlOeAQWPZe9fHKN+2B+2nJ9r1PxA/wm8FXJLRWGm+bavJGe2yM+dICCOJ
        XVT1A5p27i16H6i69468OeFFH9t69p2jD11C6SAfm5FUtI+J3g3xLdCDSPFmh6rOV2+TZ6jDMzewVWPq
        Og7V+eHh3/gkP4HkBm8T+M/EGrahIczPaTW9upY8k4McvOe26tLVv+CP/wALLm3Kad4m8U2dyF+SQzQT
        qD6sghBP4MopdR+p+kkciqDy5543KQfw9ak84HGA/wD3wa/LH/hmT9qf9ldUv/hD8UZfHOjW+R/wjl7J
        jeo/hW1md4ycYzsdX6e1e5/st/8ABSrRPiZ4gi8AfFTR2+GfxHjlFqLe6V47S8m4AVdw3QuSeI5ODxtd
        idodhH22twjKCA+D/sN/hSfaIwwDNtJ6Bhjp/wDrp47nn15rmPEUzf8ACUaJHuKo0F0WHuDFj+Z/OkM6
        aH/V/if5mpKjh/1f4n+ZqSgBCcV8kf8ABQX9sb/hmX4f22l+GSt38RvEqtDpEIUP9mj4DXRXuRnaikfM
        /YhSK+rdQvrfTLWe6u5VgtYEMsskhwqIoyzE+gAzX48fBm4uP2yP2xPFvxc1tHk0LSbrydHhkwVjRAyw
        qByMqgD8Hh5AeacU2xN2PU/2Of2M/wCyZj8RviY8mu+N9QlN7I19KZfs8jfPuJYfNN82TJztO4L61778
        Vv2ovDnwqSTTtPRdR1XGBBBgKvJAyc8AkH7xA9M1i/tDfFr/AIVv4Tt9M0hVGpXn+j2yxggICMZA7AE4
        49a8x+EfhfTPB1wNe1xU1jxRKfN8+6AkFqxxkxgjCsCDliOw/H6bL8ueIi6so6HzuYZnHDyVGMveNy18
        eftF/FSP7T4e8O3enadMu6LzClouOxTzHQkEd8H61HdTftO+CYftd3pF5fWw5ZbeeK/Oe4KK7noOy969
        RPxhn/57DJ5IJYj8t/Wnf8LinZRm4JC9Pm5H0Pp+Fd7wdROypqx439oR+J1NTjvhr+2ol5qR0bxlYNpF
        /GwjaVF2FWz0kjPPBz7D0rc/ac/ZV8E/tZ+EVlYW1h4pjhL6R4ltlB3cZEM4U/vImJPJwVySO+eL+Lmm
        6B8WLD/To1ttXiX/AEXUYMLKrc/K395ST0I7+9c3+zb8WtR8IeJH8Ea9KJLffsgJJCIx4yD/AHSM8Y6i
        uPG5alTdakreR6OAzVSmqNR3b6nRfsBftUeKtJ8cXv7OfxkeSDxzoe6LSNSvZC0l9GgBNu7E/O4jyyP/
        ABIuDyvzfbmvtu8VaAV6fZ7vH0zFivzv/wCCjnwzupvCugfG7wlLJp/jPwRdQi4vIOJJLXzP3Uhx/FHJ
        t68FXb0xX2h8H/ixa/HfwH8M/HdhGqrrWkzzzQRHIhnBiWaME/3JFdfwr5VrsfVI9qh/1f4n+ZqSo4f9
        X+J/maf/ABUDPAf28/GT+Av2Qfipq0beXK+jvpySZIKm6dbbIPY/vePoK+Nv+Cd3h6Lw78CtPuxGBPfy
        SXEnuWlKg/8AfCJX1F/wU6t57z9h34mR28TSSKmny4Uc7U1G1dj+CqT+FfM/7FOsxSfAfw15bBjHAAQv
        fazIw+uQfyNb048xnUdkc98f9eu9W+Ml+0Uvy6UI7eDPIDBA7HHTlnb/AL5WsjT/ABZqscaLK6y/3nxg
        sf7x9zWx8UtHa1+Lni2J15bUHZM85Vwrp/44y1n2em74wduRnA/Cv2rLKcFgoWP5j4kzCpSzGqr2szSh
        8VSsvzRsD7cipv8AhInPRqZDpJZcYx7Yp0mj/L93Neg6cD4551V5rORBceIJQuQ3PYg9Pf61x3iXUW/t
        az1WM4uIG3GQcH5RuBP69/SunutMODkVzWu6fttZV2k/KwwOuSNoA9ySK58RRpOhPTofQ5Vm1WeKppS6
        o+yls4Pir8LNX0G72mLxBostjKWGfmeNgG/BgG6dq8b/AOCQ/i+bXvgu/h+6n83+xNZ1BIEJ5hhmitZA
        Mf3TJ55+rV6t8KLgaRpOkCVsJbwMzk9AAjnH44NfPn/BHfS5v+Ed8b6iVItrrUjAkgPVo4o2Yc+0i96/
        D6ySZ/VFB3jfufqhD/q/xP8AM1JUcP8Aq/xP8zSs23PBOBnAFcx0HCfHX4dn4t/B3xp4NVkSTXNIurGJ
        5OiSvEyxuT/suVb/AIDX5L/sD+OntdB1bwZfZgvtMuXU2sqFXjUkkgjPUS7wc9OK/Uv9ov8AaU8Dfsz+
        CX8SeM79kSTdDZ6fagPdXsmMmOJcj2yxIA7kV+NZ+J118YP2ybjxr8NfBl/o9t4muBJd6bNcb1l3EfaJ
        9+NqhnHmYBOGB55ArWm+V6mc1dH2b8ZNFF5Po/i+2OLe6hj07UWXny7iNT9nc/8AXSPaP+AEemcjR/D0
        t1AjRINvT8cAkY7HnuO9dhpOv/Z2vdN17T1uYpkaDUtLmB+dGO4lSOhBIZWHQgUzTtNu/AG++sxJ4l8J
        ycjUI0LT2q5yVukHKsP+egBDE59QP0DK80VOn7Co9tj8H404Zr4yt9dwqbv8SRTg8I3HXyznoRT5PCNx
        tOE59O/8q9T8N+KvCviCxjuLS7Vo24GzDKuAONw/qfTjpWhqup+HNPtTNNdARqNxbYQPxbG0fiRXv/2j
        e2mnc/Fv7J9+zlZ9rM8C1bwvPb28krJhEGW/EmuRtdCOt+JbayXmC3P2u5YdFVTlAfctj8jXpPijxVJ4
        2d7Pwxbr9mViJdRm+SCP1+f+NsY+VM9RUfhrRrfTVS0sT5+5jLPdSgqz4GHkY9gvy8EdCPWvLzLNo+yd
        KD1Z+qcI8LV5V1i66tBbefn5FH4+fESP4V/s/eNNY87yLuawOjaeOAzXFwhi3KCeqIzyf8ByM9vRP+Cb
        /wAJ5Phn+zf8PpL2JoL7xMdR8QzRkZOJTAkB+hgjib/gVfJc2l3P7fn7SGgfDbw28z/CzwpJ9q1jVo2Y
        rOAwWSXcOrv/AKqPHZmb7oJr9X76xg0vXPDVnaW8dpbW9pcxQwRDCxoBCAoA7ADHHpX5pUabP6NprlSO
        xjbbGeCTljgfU14/+09+074R/Zf+Htx4l8SztLPIGi0/S4XxNfz4yI09AOMv0Uep4pf2lv2l/Cn7MHw4
        n8TeJJvOuJGeDTdKhcLPqE/aNPQDILOeFA9cA/ln4I8E+Of27PixJ8T/AIm+ZNozNt0zSFDLAkIb5UQd
        oxn6uckkZ5mMHIu6F8E+C/Hv7dHxY/4Wb8TfOOjl8adpKhkiSFTlI0HaIEnPdzkk+v6OeEvh7oPw/wDD
        8E19ZwxiFQsMaoi4wBlRhRwRj8hU/gvwVpPw08OR3NyiReVGqxxYCjgAAAZ6AAV4L+0N+0FaaHpt/fX1
        6tlY264ZtwJzzhFGfmZunFdUY6WZyylqeNftpftcWvhH4iaXZ22iC5v/ACw8ksb+Xtg3sFCsOGbIbj2G
        eop3wo/aO0Txs8F34e1o2WpjbvtmYxXA4GcqDubGT8ykjisH9iv4NeIP2vP2iLH4qa9pS2fw78LylbZL
        qLcl3KuWSEA53gO4ds8duea+r/jh/wAEofg/8V7q71bw8Lz4da7NucPooVrEybshmtW4A7YieMcZ9ahV
        uWTK9imr9TzS98UWesXH2nVfD2handycNfyWohnfGRzLCyM3fqT35qvHcaSziS28JaQs68iR7Zrkp7gy
        s4z9Qe1ctqX/AASx+P3he4eLwb8brC+scgKdWuLy1OB38tVnUHOe9R2//BM/9p3WrhItc+M+h6fZ/wAU
        2l3148v/AHyIIs/i1dCxUkrNnFLL6Mpc0oJvzSNrxt8TNI8J6eLzxh4htdKs1XKQ3BJcqM/6uAdTnONi
        jofSvFLPXPiV+3BrVx4B+D+i3GjeCywj1fxFfttWSPn/AFzjO1cNxChZmBIPykivqb4U/wDBHn4feH9U
        GrfEXxPq3xHv87mt2LWNs5xyX2yNK5znBEijpkGvuPwj4H0LwD4ft9D8NaTY6Do9uu2Gx0+3SGFemTsU
        AZOOT1PrmuWpWdRnfTowp6pHnP7MP7MfhX9l/wCGlt4U8NqbmcsJtT1adAJtQudoDSN6KB8qoDhV4yTu
        J7vxGCPFmhZ/54XeMfWGuoVSN3pniuY8Tf8AI2aD/wBe91/OGuc3Pyz/AG+LIeMv+CiHg7w546uPs/hE
        6dbjThduVt3VvNPrgeZcL5ZOMnaoPavuvwb4L0j4a6BFPcKkAiVY4osYGAAAAMdMAfTIp/7X37Hnhv8A
        ay8Arpl+Y9K8UacJJNG12NSXtnJyEfu0THbuX6EYI5/N2b9qr4jfs7xXfwq+NGmapdatoUf2exv4iJJZ
        rYABMszKJI9o+WQckDB5U1vCWtmZTjpdH1H+0L+0NZaLpuoahe3iWWn23BbcCepwirn5mb29q+Xf2eP2
        d/Fv/BQb4jJ4g8RC50H4SaPcYbZlWuMEFoIT3dgRukzhQeMnipv2ff2bfGX7f/xEg8ReJorzw78JdMm3
        bypRrwAgmKH1dhtDSZwo6ZPFfsN4M8GaN8P/AArpnh3QNNt9K0fTYlgtrO2XakajoB6n3PJOTVVan2Yk
        04NayE8GeC9H8AeF9M8O6Bp1vpWjadCsFtZ26YSNR0x6n1J6k561uqMDHWhfrTq5jcKKKKAEopaKACuU
        8Tf8jZoP/Xvdfzhrq65XxEu/xfoC5xmC7HQ/9Mj6e1AF3WPDsepyLI15eW44UrbzsgIycjg988/SuY8Q
        fB/w74wjih19bjW4oZN8cd/J5yxtkAFA2dp+nNFFAmatr4FtrGGK3i1HUoo4gNscV3IqKB0AGeO3AqRf
        BiMdv9saxkDJJvn9frRRUroWxf8AhC03Y/tjV+uP+P2T/Gkj8GxyZxrGr/jeyf40UVRI/wD4QlOD/bGr
        /wDga/8AjTB4NTAP9sav/wCBsn+NFFHVANHg+PaD/bGsck/8vsnr9aX/AIQ+Pn/icax3/wCX2T/Giiju
        JA3g+NVLf2xrHH/T7J2z/te1XtN8LQ6fdJcG6u7yZAwQ3U7PtBxnGfpRRQM//9k=
</value>
  </data>
</root>